image: node:14

variables:
  DOCS_FOLDER: "docs"
  SPEC_TO_DISPLAY: "openapi.yaml"

stages:
  - pre-mr
  - post-mr
  - pre-dev
  - dev
  - post-dev
  - pre-stage
  - stage
  - post-stage
  - pre-prod
  - prod
  - post-prod

include:
  - template: Security/SAST.gitlab-ci.yml

sast:
  stage: pre-mr

eslint-sast:
  stage: pre-mr
  rules:
      - if: $CI_MERGE_REQUEST_ID

bandit-sast:
  stage: pre-mr
  rules:
      - if: $CI_MERGE_REQUEST_ID

nodejs-scan-sast:
  stage: pre-mr
  rules:
      - if: $CI_MERGE_REQUEST_ID

semgrep-sast:
  stage: pre-mr
  cache: {}
  rules:
    - if: $CI_MERGE_REQUEST_ID

cache:
  paths:
    - node_modules/

jest:
  stage: pre-mr
  except:
    - tags
  only:
    refs:
      - merge_requests
    variables:
      - $CI_COMMIT_REF_PROTECTED
  tags:
    - node
  services:
    - name: repo.maroonstudios.com:5050/maroon-studios/operations/mongodb-docker:0.0.25
      alias: database
  script:
    - npm i jest supertest jest-junit
    - npm i
    - npm run seed-test-users
    - npm run seed-user-roles
    - npm run test-cicd
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
    expire_in: 7 days

pages:
  stage: post-mr
  before_script:
    - npm install swagger-ui-dist
  script:
    - mkdir public
    - cp -rp node_modules/swagger-ui-dist/* public
    - cp -rp $DOCS_FOLDER/* public
    - sed -i "s#https://petstore\.swagger\.io/v2/swagger\.json#$SPEC_TO_DISPLAY#g" public/index.html
  artifacts:
    paths:
      - public
  only:
    - master

deploy_dev:
  stage: dev
  only: 
    - master
  environment:
    name: dev
  when: manual
  needs:
    - pages
  script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - bash deploy/deploy.sh dev

nikto_dast_dev:
  stage: post-dev
  needs:
    - deploy_dev
  tags:
    - secure
  only:
    - master
  when: on_success
  before_script:
    - mkdir junit
  script:
    - nikto -ask no -Tuning 1234567890abcedx -mutate 12345 -host http://$DEPLOY_SERVER_ACFIN_DEV/login -Format xml -output nikto.xml
    - pip2.7 install junit-xml-output
    - python tests/tools/nikto/parser.py -f nikto.xml
    - python tests/tools/junit.py -t nikto -f nikto.xml
    - exit $( grep -c "OSVDB-" nikto.xml || true; )
  artifacts:
    when: always
    reports:
      junit: junit/junit_nikto.xml
    paths:
      - nikto.xml
    expire_in: 7 days

nmap_dast_dev:
  stage: post-dev
  needs:
    - deploy_dev
  tags:
    - secure
  only:
    - master
  when: on_success
  script:
    - nmap -oX nmap.xml -A -T4 --script nmap-vulners/ --stylesheet tests/tools/nmap/nmap.xsl $DEPLOY_SERVER_ACFIN_DEV
    - xsltproc nmap.xml -o nmap.html
    - exit $( grep -c 'true' nmap.xml || true; )
  artifacts:
    when: always
    paths:
      - nmap.xml
      - nmap.html
    expire_in: 7 days

wapiti_dast_dev:
  stage: post-dev
  needs:
    - deploy_dev 
  tags:
    - secure
  only:
    - master
  when: on_success
  script:
    - wapiti -l 2 --skip-crawl --no-bugreport -u http://$DEPLOY_SERVER_ACFIN_DEV/login -f html -o wapiti.html
    - wapiti -l 2 --skip-crawl --no-bugreport -u http://$DEPLOY_SERVER_ACFIN_DEV/login -f txt -o wapiti.txt
    - exit $( grep -c ':\s{1,}[1-9]{1}[0-9]{0,}' wapiti.txt || true; )
  artifacts:
    when: always
    paths:
      - wapiti.html
      - wapiti.txt
    expire_in: 7 days

sitadel_dast_dev:
  stage: post-dev
  needs:
    - deploy_dev
  tags:
    - secure
  only:
    - master
  when: on_success
  before_script:
    - git clone https://github.com/shenril/Sitadel.git
    - cd Sitadel
    - pip3 install .
  script:
    - python3 sitadel.py --no-redirect http://$DEPLOY_SERVER_ACFIN_DEV/login 2>&1 | tee sitadel.txt
    - cp ./sitadel.txt ../sitadel.txt
    - cd ..
    - exit $( grep -c '[+]' sitadel.txt || true; )
  artifacts:
    paths:
    - sitadel.txt
    expire_in: 7 days
  allow_failure: true

build_demo_image_kaniko:
  stage: pre-stage
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  when: manual
  only: 
    - tags
  tags:
    - docker
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "builder" "${BUILDER_PASS}" | base64 -w 0)\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"

build_demo_image:
  stage: pre-stage
  image: docker:latest
  services:
    - docker:dind
  when: manual
  only: 
    - tags
  tags:
    - docker
  before_script:
    - docker info
  script:
    - docker login repo.maroonstudios.com:5050 -u builder -p $BUILDER_PASS
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker system prune -a -f

deploy_demo:
  stage: stage
  tags: 
    - node
  only: 
    - tags
  needs:
    - build_demo_image
  environment:
    name: demo
  when: manual
  script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - bash deploy/stage.sh $DEPLOY_SERVER_ACFIN_DEMO $CI_REGISTRY_IMAGE $CI_COMMIT_TAG $IMAGEPULL_PASS

nikto_dast_demo:
  stage: post-stage
  needs:
    - deploy_demo
  tags:
    - secure
  only:
    - tags
  when: on_success
  before_script:
    - mkdir junit
  script:
    - nikto -ask no -Tuning 1234567890abcedx -mutate 12345 -host http://$DEPLOY_SERVER_ACFIN_DEMO/login -Format xml -output nikto.xml
    - pip2.7 install junit-xml-output
    - python tests/tools/nikto/parser.py -f nikto.xml
    - python tests/tools/junit.py -t nikto -f nikto.xml
    - exit $( grep -c "OSVDB-" nikto.xml || true; )
  artifacts:
    when: always
    reports:
      junit: junit/junit_nikto.xml
    paths:
      - nikto.xml
    expire_in: 7 days

nmap_dast_demo:
  stage: post-stage
  needs:
    - deploy_demo
  tags:
    - secure
  only:
    - tags
  when: on_success
  script:
    - nmap -oX nmap.xml -A -T4 --script nmap-vulners/ --stylesheet tests/tools/nmap/nmap.xsl $DEPLOY_SERVER_ACFIN_DEMO
    - xsltproc nmap.xml -o nmap.html
    - exit $( grep -c 'true' nmap.xml || true; )
  artifacts:
    when: always
    paths:
      - nmap.xml
      - nmap.html
    expire_in: 7 days

wapiti_dast_demo:
  stage: post-stage
  needs:
    - deploy_demo
  tags:
    - secure
  only:
    - tags
  when: on_success
  script:
    - wapiti -l 2 --skip-crawl --no-bugreport -u http://$DEPLOY_SERVER_ACFIN_DEMO/login -f html -o wapiti.html
    - wapiti -l 2 --skip-crawl --no-bugreport -u http://$DEPLOY_SERVER_ACFIN_DEMO/login -f txt -o wapiti.txt
    - exit $( grep -c ':\s{1,}[1-9]{1}[0-9]{0,}' wapiti.txt || true; )
  artifacts:
    when: always
    paths:
      - wapiti.html
      - wapiti.txt
    expire_in: 7 days

sitadel_dast_demo:
  stage: post-stage
  needs:
    - deploy_demo
  tags:
    - secure
  only:
    - tags
  when: on_success
  before_script:
    - git clone https://github.com/shenril/Sitadel.git
    - cd Sitadel
    - pip3 install .
  script:
    - python3 sitadel.py --no-redirect http://$DEPLOY_SERVER_ACFIN_DEMO/login 2>&1 | tee sitadel.txt
    - cp ./sitadel.txt ../sitadel.txt
    - cd ..
    - exit $( grep -c '[+]' sitadel.txt || true; )
  artifacts:
    paths:
    - sitadel.txt
    expire_in: 7 days
  allow_failure: true

deploy_prod1:
  stage: prod
  tags: 
    - node
  only: 
    - tags
  needs:
    - build_demo_image
  environment:
    name: prod
  when: manual
  script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - bash deploy/stage-prod.sh $DEPLOY_SERVER_ACFIN_PROD1 $CI_REGISTRY_IMAGE $CI_COMMIT_TAG $IMAGEPULL_PASS

deploy_prod2:
  stage: prod
  tags: 
    - node
  only: 
    - tags
  needs:
    - build_demo_image
  environment:
    name: prod
  when: manual
  script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - bash deploy/stage-prod.sh $DEPLOY_SERVER_ACFIN_PROD2 $CI_REGISTRY_IMAGE $CI_COMMIT_TAG $IMAGEPULL_PASS

nikto_dast_prod:
  stage: post-prod
  needs:
    - deploy_prod1
    - deploy_prod2
  tags:
    - secure
  only:
    - tags
  when: on_success
  before_script:
    - mkdir junit
  script:
    - nikto -ask no -Tuning 1234567890abcedx -mutate 12345 -host https://$DEPLOY_SERVER_ACFIN_PROD/login -Format xml -output nikto.xml
    - pip2.7 install junit-xml-output
    - python tests/tools/nikto/parser.py -f nikto.xml
    - python tests/tools/junit.py -t nikto -f nikto.xml
    - exit $( grep -c "OSVDB-" nikto.xml || true; )
  artifacts:
    when: always
    reports:
      junit: junit/junit_nikto.xml
    paths:
      - nikto.xml
    expire_in: 7 days

nmap_dast_prod:
  stage: post-prod
  needs:
    - deploy_prod1
    - deploy_prod2
  tags:
    - secure
  only:
    - tags
  when: on_success
  script:
    - nmap -oX nmap.xml -A -T4 --script nmap-vulners/ --stylesheet tests/tools/nmap/nmap.xsl $DEPLOY_SERVER_ACFIN_PROD
    - xsltproc nmap.xml -o nmap.html
    - exit $( grep -c 'true' nmap.xml || true; )
  artifacts:
    when: always
    paths:
      - nmap.xml
      - nmap.html
    expire_in: 7 days

wapiti_dast_prod:
  stage: post-prod
  needs:
    - deploy_prod1
    - deploy_prod2
  tags:
    - secure
  only:
    - tags
  when: on_success
  script:
    - wapiti -l 2 --skip-crawl --no-bugreport -u https://$DEPLOY_SERVER_ACFIN_PROD/login -f html -o wapiti.html
    - wapiti -l 2 --skip-crawl --no-bugreport -u https://$DEPLOY_SERVER_ACFIN_PROD/login -f txt -o wapiti.txt
    - exit $( grep -c ':\s{1,}[1-9]{1}[0-9]{0,}' wapiti.txt || true; )
  artifacts:
    when: always
    paths:
      - wapiti.html
      - wapiti.txt
    expire_in: 7 days

sitadel_dast_prod:
  stage: post-prod
  needs:
    - deploy_prod1
    - deploy_prod2
  tags:
    - secure
  only:
    - tags
  when: on_success
  before_script:
    - git clone https://github.com/shenril/Sitadel.git
    - cd Sitadel
    - pip3 install .
  script:
    - python3 sitadel.py --no-redirect https://$DEPLOY_SERVER_ACFIN_PROD/login 2>&1 | tee sitadel.txt
    - cp ./sitadel.txt ../sitadel.txt
    - cd ..
    - exit $( grep -c '[+]' sitadel.txt || true; )
  artifacts:
    paths:
    - sitadel.txt
    expire_in: 7 days
  allow_failure: true